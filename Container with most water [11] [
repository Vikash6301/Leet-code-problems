CODE IN C++ 

class Solution {
public:
    int maxArea(vector<int>& height) {
        int i =0;
        int j = height.size()-1;
        vector<int>ans;
        while(i<=j){
            if (height[i]<height[j]){
                int result = height[i]*(j-i);
                ans.push_back(result);
                i++;
            }
            else{
                int result = height[j]*(j-i);
                ans.push_back(result);
                j--;

            }
        } 
        int maxi = *max_element(ans.begin(),ans.end());
        return maxi;
               
    }
};


CODE IN PYTHON 


class Solution:
    def maxArea(self, height: List[int]) -> int:
        n = len(height)
        i = 0 
        j = n-1
        ans = []
        while (i<=j):
            if (height[i]<height[j]):
                water = height[i]*(j-i)
                ans.append(water)
                i+=1

            else:
                water = height[j]*(j-i)
                ans.append(water)
                j-=1
        
        result = max(ans)
        return result
